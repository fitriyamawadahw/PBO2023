/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectuas;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

/**
 *
 * @author Fitriyah
 */
public class LaporanDataSkripsi extends javax.swing.JFrame {

    /**
     * Creates new form LaporanDataSkripsi
     */


    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }

    private void tampil() {
        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        entityManager.getTransaction().begin();
        TypedQuery<DataSkripsi> querySelectAll = entityManager.createNamedQuery("DataSkripsi.findAll", DataSkripsi.class);
        List<DataSkripsi> results = querySelectAll.getResultList();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        int nomor = 1; // Inisialisasi nomor awal

        for (DataSkripsi data : results) {
            Object[] baris = new Object[10];

            // Menambahkan nomor secara otomatis pada kolom pertama (indeks 0)
            baris[0] = nomor;
            baris[1] = data.getNomorindeks();
            baris[2] = data.getJudulskripsi();
            baris[3] = data.getPenulis();
            baris[4] = data.getKategori();
            baris[5] = data.getProgramstudi();
            baris[6] = data.getAngkatan();
            baris[7] = data.getTahunterbits();
            baris[8] = data.getJumlahhalamans();
            baris[9] = data.getTanggalpenyelesaian();

            model.addRow(baris);
            nomor++; // Menambah 1 untuk nomor berikutnya
        }

        entityManager.getTransaction().commit();
        entityManager.close();
    }

    public LaporanDataSkripsi() {

            initComponents();
            tampil();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextsearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Nomor Indeks", "Judul Skripsi", "Penulis", "Kategori", "Program Studi", "Angkatan", "Tahun Terbit", "Jumlah Halaman", "Tanggal Penyelesaian"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 830, 190));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setText("LAPORAN DATA SKRIPSI");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 420, -1));

        jLabel12.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel12.setText("DASHBOARD");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 151, -1, 30));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel15.setText("LAPORAN DATA BUKU              >");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 200, 80));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLabel16.setText("LAPORAN DATA SKRIPSI          >");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, 200, 80));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/setting 1.png"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("PERPUSTAKAAN SISTEM INFORMASI");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        jLabel2.setText("SEARCH :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, -1, 20));

        jTextsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextsearchKeyReleased(evt);
            }
        });
        getContentPane().add(jTextsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, 140, -1));

        jLabel3.setText("SHORT BY :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 300, -1, 20));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Indeks", "Judul Skripsi", "Penulis", "Kategori", "Program Studi", "Angkatan", "Tahun Terbit", "Jumlah Halaman", "Tanggal Penyelesaian" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 300, 160, -1));

        jButton1.setBackground(new java.awt.Color(13, 67, 170));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CETAK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 550, -1, -1));

        jButton2.setBackground(new java.awt.Color(13, 67, 170));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("UPLOAD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 550, -1, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel14.setText("DATA SKRIPSI                            >");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 200, 80));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel13.setText("DATA BUKU                                >");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 200, 90));

        jLabel22.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel22.setText("PEMINJAMAN  SKRIPSI            >");
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, 200, 80));

        jLabel17.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel17.setText("PEMINJAMAN BUKU                   >");
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 200, 90));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Rekomendasi 2 (3).png"))); // NOI18N
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();

        int i = filechooser.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION) {

            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPBOFitriyaPU").createEntityManager();
            entityManager.getTransaction().begin();

            File f = filechooser.getSelectedFile();
            String filepath = f.getPath();
            String fi = f.getName();
            //Parsing CSV Data
            System.out.print(filepath);
            DefaultTableModel csv_data = new DefaultTableModel();

            try {

                InputStreamReader inputStreamReader = new InputStreamReader(new FileInputStream(filepath));
                org.apache.commons.csv.CSVParser csvParser = CSVFormat.DEFAULT.parse(inputStreamReader);
                for (CSVRecord csvRecord : csvParser) {

                    DataSkripsi d = new DataSkripsi();
                    d.setNomorindeks(csvRecord.get(1));
                    d.setJudulskripsi(csvRecord.get(2));
                    d.setPenulis(csvRecord.get(3));
                    d.setKategori(csvRecord.get(4));
                    d.setProgramstudi(csvRecord.get(5));
                    d.setAngkatan(csvRecord.get(6));
                    d.setTahunterbits(csvRecord.get(7));
                    d.setJumlahhalamans(csvRecord.get(8));
                    d.setTanggalpenyelesaian(csvRecord.get(9));

                    entityManager.persist(d);

                }

            } catch (Exception ex) {
                System.out.println("Error in Parsing CSV File");
            }

            entityManager.getTransaction().commit();
        }
    }                                        

    private void jTextsearchKeyReleased(java.awt.event.KeyEvent evt) {                                        
        // TODO add your handling code here:
        try {
            String selection = (String) jComboBox1.getSelectedItem();
            String searchTerm = jTextsearch.getText().trim().toLowerCase();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT d FROM DataSkripsi d WHERE ";

            switch (jComboBox1.getSelectedIndex()) {
                case 0:
                    queryString += "LOWER(d.nomorindeks) LIKE LOWER(:searchTerm)";
                    break;
                case 1:
                    queryString += "LOWER(d.judulskripsi) LIKE LOWER(:searchTerm)";
                    break;
                case 2:
                    queryString += "LOWER(d.penulis) LIKE LOWER(:searchTerm)";
                    break;
                case 3:
                    queryString += "LOWER(d.kategori) LIKE LOWER(:searchTerm)";
                    break;
                case 4:
                    queryString += "LOWER(d.programstudi) LIKE LOWER(:searchTerm)";
                    break;
                case 5:
                    queryString += "LOWER(d.angkatan) LIKE LOWER(:searchTerm)";
                    break;
                case 6:
                    queryString += "LOWER(d.tahunterbits) LIKE LOWER(:searchTerm)";
                    break;
                case 7:
                    queryString += "LOWER(d.jumlahhalamans) LIKE LOWER(:searchTerm)";
                    break;
                case 8:
                    queryString += "LOWER(d.tanggalpenyelesaian) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjectUASPU");
            EntityManager em = emf.createEntityManager();

            TypedQuery<DataSkripsi> query = em.createQuery(queryString, DataSkripsi.class);
            query.setParameter("searchTerm", "%" + searchTerm + "%");

            List<DataSkripsi> results = query.getResultList();

            DefaultTableModel dataModel = new DefaultTableModel();

            // Add columns to the model
            dataModel.addColumn("No.");
            dataModel.addColumn("Nomor Indeks");
            dataModel.addColumn("Judul Skripsi");
            dataModel.addColumn("Penulis");
            dataModel.addColumn("Kategori");
            dataModel.addColumn("Program Studi");
            dataModel.addColumn("Angkatan");
            dataModel.addColumn("Tahun Terbit");
            dataModel.addColumn("Jumlah Halaman");
            dataModel.addColumn("Tanggal Penyelesaian");

            // Add rows to the model
            int nomor = 1;
            for (DataSkripsi result : results) {
                Object[] rowData = {
                    nomor,
                    result.getNomorindeks(),
                    result.getJudulskripsi(),
                    result.getPenulis(),
                    result.getKategori(),
                    result.getProgramstudi(),
                    result.getAngkatan(),
                    result.getTahunterbits(),
                    result.getJumlahhalamans(),
                    result.getTanggalpenyelesaian()

                };
                dataModel.addRow(rowData);
                nomor++;
            }

            // Set jTable1 with the created model
            jTable1.setModel(dataModel);
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }                                       

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        try {
            String reportPath = "src/projectuas/reportSkripsi.jrxml";
            String selection = ((String) jComboBox1.getSelectedItem()).toLowerCase();
            String searchTerm = jTextsearch.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT d FROM DataSkripsi d WHERE ";

             switch (jComboBox1.getSelectedIndex()) {
                case 0:
                    queryString += "LOWER(d.nomorindeks) LIKE LOWER(:searchTerm)";
                    break;
                case 1:
                    queryString += "LOWER(d.judulskripsi) LIKE LOWER(:searchTerm)";
                    break;
                case 2:
                    queryString += "LOWER(d.penulis) LIKE LOWER(:searchTerm)";
                    break;
                case 3:
                    queryString += "LOWER(d.kategori) LIKE LOWER(:searchTerm)";
                    break;
                case 4:
                    queryString += "LOWER(d.programstudi) LIKE LOWER(:searchTerm)";
                    break;
                case 5:
                    queryString += "LOWER(d.angkatan) LIKE LOWER(:searchTerm)";
                    break;
                case 6:
                    queryString += "LOWER(d.tahunterbits) LIKE LOWER(:searchTerm)";
                    break;
                case 7:
                    queryString += "LOWER(d.jumlahhalamans) LIKE LOWER(:searchTerm)";
                    break;
                case 8:
                    queryString += "LOWER(d.tanggalpenyelesaian) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjectUASPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            CriteriaBuilder cb = em.getCriteriaBuilder();
            CriteriaQuery<DataSkripsi> cq = cb.createQuery(DataSkripsi.class);
            Root<DataSkripsi> bok = cq.from(DataSkripsi.class);
            cq.select(bok);

            // Check if WHERE clause is not empty
            if (queryString.endsWith(" WHERE ")) {
                throw new IllegalArgumentException("No search criteria selected.");
            }

            TypedQuery<DataSkripsi> q = em.createQuery(cq);
            List<DataSkripsi> list = q.getResultList();
            Query query = em.createQuery(queryString);
            query.setParameter("searchTerm", "%" + searchTerm + "%");

            List<DataSkripsi> results = query.getResultList();
            Map<String, Object> parameter = new HashMap<>();
            parameter.put("querySearch", searchTerm);
            parameter.put("searchBy", selection);

            // Menyiapkan data untuk laporan
            List<Object[]> data = new ArrayList<>();
            int nomor = 1;
            for (DataSkripsi result : results) {
                Object[] rowData = {
                    nomor,
                    result.getNomorindeks(),
                    result.getJudulskripsi(),
                    result.getPenulis(),
                    result.getKategori(),
                    result.getProgramstudi(),
                    result.getAngkatan(),
                    result.getTahunterbits(),
                    result.getJumlahhalamans(),
                    result.getTanggalpenyelesaian(),
                };
                data.add(rowData);
                nomor++;
            }
            em.getTransaction().commit();
            em.close();
            emf.close();

            // Membuat sumber data untuk JasperReports dari data hasil pencarian
            JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(results);

            // Memuat file desain laporan (*.jrxml)
            JasperReport jasperReport = JasperCompileManager.compileReport(reportPath);
            JasperPrint print = JasperFillManager.fillReport(jasperReport, parameter, dataSource);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(LaporanDataSkripsi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        new LaporanDataBuku().setVisible(true);
        this.dispose();
    }                                     

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        new AddDataSkripsi().setVisible(true);
        this.dispose();
    }                                     

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        new AddDataBuku().setVisible(true);
        this.dispose();
    }                                     

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        new PeminjamanSkripsiGUI().setVisible(true);
        this.dispose();
    }                                     

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        new PeminjamanBuku().setVisible(true);
        this.dispose();
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaporanDataSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaporanDataSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaporanDataSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaporanDataSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LaporanDataSkripsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextsearch;
    // End of variables declaration                   
}
